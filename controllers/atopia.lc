<?lc
   /* =  DESCRIPTION  =
   --
   The atopia.lc controller can be found at: echo.lc
   Here is some test help

   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "auth,deleteModel,deleteShortModelFile,writeModel,listModels,list,index,atopia" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "atopia.lc" below.
   --
   */

   command atopia
      start using stack (gRigA["APPPATH"] & "stacks/lib_AtopiaTree.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/lib_AtopiaUpdate.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/lib_Date.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/lib_Fedwiki.livecode")
      start using stack (gRigA["APPPATH"] & "stacks/lib_FedwikiRoster.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/lib_PageArray.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/lib_Transport.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/model_Atopia.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/model_PageArray.livecodescript")
      start using stack (gRigA["APPPATH"] & "stacks/model_Transport.livecodescript")
   end atopia
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index
      put atopia_ListSinceDomains ("1 week") into atopiaDomains  
      put "Recent Atopia Sites" & CR & CR & atopiaDomains into rosterText
      put roster_ConstructPageArray (rosterText) into pageArray
      fedwiki_ReturnPageArray pageArray
   end index
   
   on auth
      rigLoadHelper "jwt"
      -- put $_POST_RAW into userName
      put "fortyfoxes" into userName
      --
      put jwt_ConstructToken (userName) into tJWT
      put tJWT into tTokenA ["jwt"]
      
      # rigSetHeader DOES NOT WORK WITH AJAX, USE: put header ...
      # GENERATES AN OBJECT ON CLIENT SIDE. SO, DON'T USE JSON.parse() TO PROCESS THE DATA
      put header "Content-type: application/json; charset=UTF-8"
      put JsonExport (tTokenA)
   end auth
   
   on listModels
      put transport_GetModelFolder() into modelFolder
      put files (modelFolder) into atopiaModelShortFiles
      filter atopiaModelShortFiles without ".*"
      put atopiaModelShortFiles
   end listModels
   
   on deleteModel
      put $_POST_RAW into rawJSON
      put json_ToArray (rawJSON) into postData
      --
      put rigFetchConfigItem ("TransportModel") into storedSecret
      put postData ["secret"] into someSecret
      put postData ["modelName"] into modelName
      --
      if someSecret is storedSecret AND modelName is not empty then 
         transport_DeleteModel modelName
         put the result into deleteResult
         if item 1 of deleteResult = "error" then
            put pageArray_Construct ("Error", deleteResult) into rPageArray
         else
            put pageArray_Construct (word 1 of the params, deleteResult) into rPageArray
         end if
      else
         put pageArray_Construct ("Error", "Not authenticated") into rPageArray
      end if
      --
      fedwiki_ReturnPageArray rPageArray
   end deleteModel
   
   on deleteShortModelFile
      put $_POST_RAW into rawJSON
      put json_ToArray (rawJSON) into postData
      --
      put rigFetchConfigItem ("TransportModel") into storedSecret
      put postData ["secret"] into someSecret
      put postData ["shortModelFile"] into shortModelFile
      --
      if someSecret is storedSecret AND shortModelFile is not empty then 
         transport_DeleteShortModelFile shortModelFile
         put the result into deleteResult
         --
         if item 1 of deleteResult = "error" then
            put pageArray_Construct ("Error", deleteResult) into rPageArray
         else
            put pageArray_Construct (word 1 of the params, deleteResult) into rPageArray
         end if
      else
         put pageArray_Construct ("Error", "Not authenticated") into rPageArray
      end if
      --
      fedwiki_ReturnPageArray rPageArray
   end deleteShortModelFile
   
   on writeModel
      -- put rigVarPost (modelName) into modelData
      put $_POST_RAW into rawJSON
      put json_ToArray (rawJSON) into postData
      --
      put rigFetchConfigItem ("TransportModel") into storedSecret
      put postData ["secret"] into someSecret
      --
      -- put rigFetchSegment (3, "Atopia Model") into modelName
      put postData ["modelName"] into modelName
      --
      if someSecret is storedSecret AND modelName is not empty then 
         put postData ["modelData"] into modelData
         --
         transport_WriteModel modelName, modelData
         put the result into jsonPath
         --
         put pageArray_Construct (word 1 of the params, jsonPath) into rPageArray
      else
         put pageArray_Construct ("Error", "Not authenticated") into rPageArray
      end if
      --
      fedwiki_ReturnPageArray rPageArray
   end writeModel
   
   on list
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["outputType"] into outputType
      --
      put atopia_ListRecentDomains () into wikiDomains
      switch outputType
         case "top"
            put url_ListTopDomains (wikiDomains) into wikiDomains
            break
         default
      end switch
      url_SortDomainIndex wikiDomains
      put fedwiki_MarkdownIndex (wikiDomains) into markdownIndex
      --
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      put postArray ["itemID"] into itemID
      --
      put pageArray_Fetch (templateDomain, templateSlug) into pageArray
      pageArray_SetItemText pageArray, itemID, markdownIndex
      pageArray_StripJournal pageArray
      pageArray_AddFork pageArray, "sites.fedwiki.org"
      --
      fedwiki_ReturnPageArray pageArray   
   end list

?>