<?lc
   /* =  DESCRIPTION  =
   --
   The audioboom.lc controller can be found at: echo.lc
   Here is some test help

   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "index,audioboom" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "audioboom.lc" below.
   --
   */

   command audioboom
      start using stack (gAPPPATH & "stacks/lib_Audioboom.livecode")
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_PageArray.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_REST.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Library.livecodescript")
   end audioboom
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      switch
         case droppedURL is empty
            put "Error, expecting an audioboo clip url and it is empty" into errorText
            put pageArray_Construct ("Error", errorText) into pageArray
            break
         case droppedURL is a number
            -- let's assume it is an audioboom-clip-ID
            put audioboom_ClipJsonFromUrl (droppedURL) into someJSON
            put json_ToArray (someJSON) into pageArray
            break
         default
            put audioboom_ClipJsonFromUrl (droppedURL) into someJSON
            if someJSON is empty then
               put "Error, this was not an audioboo clip url" into errorText
               put fedwiki_ConstructNewPageArray ("Error", errorText) into pageArray
            else
               put json_ToArray (someJSON) into pageArray
            end if
      end switch
      --
      fedwiki_ReturnPageArray pageArray
   end index

?>