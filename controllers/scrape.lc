<?lc
   /* =  DESCRIPTION  =
   --
   The scrape.lc controller can be found at: echo.lc
   Here is some test help

   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "htmlPage,index,scrape" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "scrape.lc" below.
   --
   */

   command scrape
      start using stack (gAPPPATH & "stacks/lib_Citation.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Curly.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_HTML.livecode")
      start using stack (gAPPPATH & "stacks/lib_ImageMagick.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Map.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_PageArray.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_REST.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Scrape.livecode")
      start using stack (gAPPPATH & "stacks/lib_Transport.livecodescript")
      start using stack (gAPPPATH & "stacks/model_PageArray.livecodescript")
   end scrape
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index
      -- Respond to Ward's Fedwiki scrape-completion webhook
      
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["date"] into lastUpdatedSeconds
      --
      -- atopia_TrashAndUpdateModified
      -- put the result into atopiaCatModel
      --
      put transport_ConstructUpdatePageArray (lastUpdatedSeconds, postArray) into pageArray
      transport_StorePageArray pageArray
      put the result into tResult
      put tResult
      /*
      if item 1 of tResult is "error" then
         put pageArray_Construct ("Bad", tResult) into responseArray
      else
         put pageArray_Construct ("Good", tResult) into responseArray
      end if
      pageArray_AddMarkdown responseArray, "That is all for now. We will return more useful data here at a later date."
      fedwiki_ReturnPageArray responseArray
      */
   end index
   
   on htmlPage
      transport_DropTest droppedURL, srcImageURL, qEnd, isFavicon
      put the result into imageAttributeArray
      --
      switch
         case isFavicon
            put pageArray_Construct ("Test","You dropped a fedwiki favicon") into pageArray
            fedwiki_ReturnPageArray pageArray
            break
         case srcImageURL begins with "https://www.google.com/search?q="
         case srcImageURL begins with "https://www.google.com/imgres?imgurl="
            put pageArray_ConstructGoogleImagePage (imageURL) into pageArray
            break
         case srcImageURL is not empty
            put pageArray_ConstructImageEditPage (srcImageURL, imageAttributeArray, true) into pageArray
            fedwiki_ReturnPageArray pageArray
            break
         case qEnd is among the items of "ogg,mp3,m4A,wav"
            put pageArray_Construct ("Dropped Audio", "Drag audio file to anothe page...") into pageArray
            put fedwiki_ConstructImageCaption ("Dropped audio", droppedURL) into audioCaption
            pageArray_AddAudio pageArray, droppedURL, audioCaption
            fedwiki_ReturnPageArray pageArray
            break
         case qEnd is among the items of "mp4,webm"
         case droppedURL begins with "https://www.youtube.com/"
         case droppedURL begins with "https://vimeo.com/"
         case droppedURL begins with "https://www.ted.com/talks/"
            fedwiki_ForwardAndReturn "https://rest.livecode.world/youtube"
            break
         case matchText (droppedURL, "https://www.pinterest.com/pin/(.+)/|https://www.pinterest.co.uk/pin/(.+)/", photoID)
            fedwiki_ForwardAndReturn "https://rest.livecode.world/pinterest"
            break
         case matchText (droppedURL, "https://www.flickr.com/photos/(.+)/(.+)/in/.+", userID, photoID)
            fedwiki_ForwardAndReturn "https://rest.livecode.world/flickr"
            break
         case qEnd is among the items of "jpg,jpeg,png,gif,webp,svg"
            fedwiki_ForwardAndReturn "https://rest.livecode.world/photo"
            break
         case droppedURL begins with "https://www.google.com/imgres?imgurl="
         case droppedURL begins with "https://www.google.co.uk/imgres?imgurl="
            fedwiki_ForwardAndReturn "https://rest.livecode.world/google"
            break
         default
            put scrape_ConstructFedwikiPageArray (droppedURL) into pageArray
            fedwiki_ReturnPageArray pageArray
      end switch
   end htmlPage

?>