<?lc
   /* =  DESCRIPTION  =
   --
   The fedwiki.lc controller can be found at: fedwiki.lc
   Here is some test help
   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "index,journal,compact_Refs,fork_Cleaner,fix_Title,clean_Title,clean_FirstLetter,fedwiki" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "fedwiki.lc" below.
   --
   */

   command fedwiki
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_FedwikiRoster.livecodescript")
   end fedwiki
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index
      -- fetch fedwiki.org domains
      put atopia_FetchStoredDomains ("fedwiki.org") into refTable
      put fedwiki_ConstructRosterPageArray (refTable) into pageArray
      fedwiki_ReturnPageArray pageArray
   end index
   
   on compact_Refs
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      if fedwiki_CheckUrlIsHtml (wikiPageURL, errorMsg) is false then
         put merge ("The dropped url [[droppedURL]] is not a [[Fedwiki HTML url]]. Use the link at the bottom of the page") into errorText
         fedwiki_ExitAndReturnError errorText, "Not a Fedwiki HTML URL"
      end if
      --
      fedwiki_DeconstructDroppedURL pageSlug, wikiDomain, droppedURL
      put fedwiki_FetchPageArray (wikiDomain, pageSlug) into pageArray
      fedwiki_CompactPageArrayRefs pageArray
      --
      fedwiki_ReturnPageArray pageArray
   end compact_Refs
   
   function fedwiki_CheckUrlIsHtml wikiPageURL, @errorMsg
      -- http://tools.progressivedemocracy.cc/collaborative-bookmarking.html
      set the itemdelimiter to slash
      if the number of items of wikiPageURL is not 4 then
         put "Error, dropped url is not a single .html wiki page" into errorMsg
         return false
      end if
      
      set the itemdelimiter to "."
      if item -1 of wikiPageURL is not "html" then
         put "Error, dropped url is not a single .html wiki page" into errorMsg
         return false
      end if
      
      return true
   end fedwiki_CheckUrlIsHtml
   
   on fork_Cleaner
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      put fedwiki_CleanLastLineUpJournal (droppedURL, "create,fork", "fedwiki-transport") into cleanJSON
      fedwiki_ReturnJSON cleanJSON
   end fork_Cleaner
   
   on journal
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      put fedwiki_CleanLastLineUpJournal (droppedURL) into cleanJSON
      fedwiki_ReturnJSON cleanJSON
   end journal
   
   on clean_Title
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      put fedwiki_FetchPageArray (droppedURL) into pageArray
      --
      put pageArray ["Title"] into pageTitle
      -- put toUpper (char 1 of pageTitle) into char 1 of pageTitle
      put text_InitialCaps (pageTitle) into pageTitle
      put pageTitle into pageArray ["Title"]
      --
      put json_FromArray (pageArray) into pageJSON
      fedwiki_ReturnJSON pageJSON
   end clean_Title
   
   on fix_Title
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      put fedwiki_FetchPageArray (droppedURL) into pageArray
      if pageArray is false then
         put merge ("The dropped url [[droppedURL]] is not a Fedwiki url.") into errorText
         fedwiki_ExitAndReturnError errorText, "Not a Fedwiki URL"
      end if
      --
      put pageArray ["Title"] into pageTitle
      replace "-" with space in pageTitle
      put word 1 to -1 of pageTitle into pageTitle
      put text_InitialCaps (pageTitle) into pageTitle
      put pageTitle into pageArray ["Title"]
      --
      put json_FromArray (pageArray) into pageJSON
      fedwiki_ReturnJSON pageJSON
   end fix_Title
   
   on clean_FirstLetter
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      put fedwiki_FetchPageArray (droppedURL) into pageArray
      --
      put pageArray ["Title"] into pageTitle
      put toUpper (char 1 of pageTitle) into char 1 of pageTitle
      put pageTitle into pageArray ["Title"]
      --
      put json_FromArray (pageArray) into pageJSON
      fedwiki_ReturnJSON pageJSON
   end clean_FirstLetter

?>