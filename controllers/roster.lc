<?lc
   /* =  DESCRIPTION  =
   --
   The roster.lc controller can be found at: roster.lc
   Here is some test help
   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "cat,index,tsv,subdomain,domain,activity,federation,refs,atopia_merge,atopia_merge_top,visible_merge,roster" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "roster.lc" below.
   --
   */

   command roster
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_FedwikiRoster.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_FedwikiCreate.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_GoogleCustomSearch.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Fedray.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_URL.livecodescript")
   end roster
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index 
      -- fetch all Atopia domains
      -- put atopia_FetchStoredDomains() into wikiDomains -- uses json plugin
      put atopia_FetchRoster() into wikiDomains
      put fedwiki_ConstructRosterPageArray (wikiDomains) into pageArray
      fedwiki_ReturnPageArray pageArray
   end index
   
   on tsv
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
      else
         put empty into postArray ["wikiDomain"]
         put empty into postArray ["minPageNum"]
         put "_cse_jxekaghz3nw" into cseID
      end if
      
      put postArray ["wikiDomain"] into wikiDomain
      put postArray ["minPageNum"] into minPageNum
      put postArray ["cseID"] into cseID
      -- if minPageNum is empty then put 200 into minPageNum
      --
      put atopia_FetchStoredDomains (wikiDomain, false, minPageNum) into someDomains
      put cse_ConstructTSV (someDomains, cseID) into federationTSV
      --
      put fedwiki_ConstructErrorJSON (federationTSV, "Federation TSV") into errorJSON
      fedwiki_ReturnJSON errorJSON
   end tsv
   
   on cat
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
      else
         put "livecode-site-refs" into postArray ["pageSlug"]
         put "livecode.world" into postArray ["wikiDomain"]
      end if
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      
      put fedwiki_FetchPageArray (templateDomain, templateSlug) into pageArray
      put fedwiki_ConstructPagefoldRoster (pageArray) into rosterText
      --
      put "An automatically created roster. Created by [[Roster Maker]]." into pageDescription
      put fedwiki_CreateMarkdownPageArray ("Categorised Roster", pageDescription) into pageArray
      fedwiki_AddRosterToPageArray pageArray, rosterText
      --
      fedwiki_ReturnPageArray pageArray   
   end cat
   
   on refs
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
      else
         put "livecode.world" into postArray ["domainFilter"]
         put "livecode-site-refs" into postArray ["pageSlug"]
         put "livecode.world" into postArray ["wikiDomain"]
      end if
      
      put postArray ["domainFilter"] into domainFilter
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      --
      put atopia_FetchRoster (domainFilter) into rosterDomains
      put fedwiki_TidyRefPageRoster (templateDomain, templateSlug, rosterDomains) into fromPageArray
      --
      fedwiki_ReturnPageArray fromPageArray   
   end refs
   
   on subdomain
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["itemID"] into itemID
      put postArray ["domainFilter"] into domainFilter
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      put postArray ["outputType"] into outputType
      
      switch outputType
         case "top"
            put atopia_FetchRoster (domainFilter) into filteredAtopiaDomains
            put url_ListTopDomains (filteredAtopiaDomains) into wikiDomains
            break
            -- case "refs"
         default
            put atopia_FetchRoster (domainFilter) into wikiDomains
      end switch
      --
      put fedwiki_ConstructMarkdownIndex (wikiDomains) into markdownIndex
      put fedwiki_FetchPageArray (templateDomain, templateSlug) into pageArray
      fedwiki_SetStoryItemText pageArray, itemID, markdownIndex
      fedwiki_StripJournalToCreate pageArray
      --
      fedwiki_ReturnPageArray pageArray   
   end subdomain
   
   on visible_merge
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
      else
         put _ConstructPostArray ("741a0fcdd3ff76b2", empty, "visible-federation", "sites.fedwiki.org") into postArray
      end if
      _DeconstractPostArray postArray, itemID, domainFilter, templateSlug, templateDomain, minPageNum
      
      put fedray_FetchTopFederationDomains() into rosterDomainText
      put fedwiki_UpdateRosterPageArray (templateDomain, templateSlug, itemID, rosterDomainText) into pageArray
      --
      fedwiki_ReturnPageArray pageArray   
   end visible_merge
   
   on federation
      -- fetch all federation domains from wards scrape
      put fedray_FetchTopFederationDomains() into topFederationDomains
      return topFederationDomains
   end federation
   
   on atopia_merge_top
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
      else
         put _ConstructPostArray ("741a0fcdd3ff76b2", "livecode.world", "roster-maker", "transport.fedwiki.org") into postArray
      end if
      _DeconstractPostArray postArray, itemID, domainFilter, templateSlug, templateDomain, minPageNum
      put fedwiki_FetchPageArray (templateDomain, templateSlug) into pageArray
      --
      put atopia_FetchTopDomains() into atopiaDomains
      put fedwiki_ConstructMarkdownIndex (atopiaDomains) into markdownIndex
      fedwiki_SetStoryItemText pageArray, itemID, markdownIndex
      fedwiki_StripJournalToCreate pageArray
      --
      fedwiki_ReturnPageArray pageArray   
   end atopia_merge_top
   
   on atopia_merge
      -- update a roster
      put fedwiki_GetDroppedArray (postArray) into postArray
      _DeconstractPostArray postArray, itemID, domainFilter, templateSlug, templateDomain, minPageNum
      put atopia_FetchRosterDomains (domainFilter) into domainNames
      --
      put fedwiki_UpdateRosterPageArray (templateDomain, templateSlug, itemID, domainNames) into pageArray
      --
      fedwiki_ReturnPageArray pageArray   
   end atopia_merge
   
   on domain topDomain
      -- roster can't use these url's :(
      if the environment = "server" then
         put rigFetchSegment(3, "") into topDomain
      else
         put "" into topDomain
      end if
      --
      put atopia_FetchRoster (topDomain) into rosterText
      put fedwiki_ConstructRosterPageArray (rosterText) into pageArray
      fedwiki_ReturnPageArray pageArray
   end domain
   
   on activity wikiDomain
      -- used by form for creating a roster-page
      if the environment = "server" then
         put fedwiki_GetDroppedArray() into postArray
         put postArray ["wikiDomain"] into wikiDomain
      end if
      put fedwiki_CreateRosterPageArray (wikiDomain) into pageArray
      fedwiki_ReturnPageArray pageArray
   end activity
   
   private function _ConstructPostArray itemID, domainFilter, pageSlug, wikiDomain, minPageNum
      put itemID into postArray ["itemID"]
      put domainFilter into postArray ["domainFilter"]
      put pageSlug into postArray ["pageSlug"]
      put wikiDomain into postArray ["wikiDomain"]
      put minPageNum into postArray ["minPageNum"]
      return postArray
   end _ConstructPostArray
   
   private command _DeconstractPostArray postArray, @itemID, @domainFilter, @pageSlug, @wikiDomain, @minPageNum
      put postArray ["itemID"] into itemID
      put postArray ["domainFilter"] into domainFilter
      put postArray ["pageSlug"] into pageSlug
      put postArray ["wikiDomain"] into wikiDomain
      put postArray ["minPageNum"] into minPageNum
   end _DeconstractPostArray

?>