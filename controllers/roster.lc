<?lc
   /* =  DESCRIPTION  =
   --
   The roster.lc controller can be found at: echo.lc
   Here is some test help

   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "transportSites,refs,atopiaSites,activity,sites,federation,domain,subdomain,update,list,index,tsv,author,cat,roster" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "roster.lc" below.
   --
   */

   command roster
      start using stack (gAPPPATH & "stacks/lib_AtopiaTree.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Curly.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Date.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_FedwikiCreate.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_FedwikiRoster.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_GoogleCustomSearch.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_PageArray.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Transport.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Atopia.livecodescript")
      start using stack (gAPPPATH & "stacks/model_AtopiaAuthors.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Federation.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Fedray.livecodescript")
      start using stack (gAPPPATH & "stacks/model_PageArray.livecodescript")
   end roster
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index 
      /*
      put rigFetchSegment(2, "") into restHandler
      put rigTotalSegments() into sNum
      put $HTTP_REFERER into wikiURL
      set the itemdelimiter to slash
      put item 3 of wikiURL into restDomain
      put item 5 of wikiURL into restSlug
      */
      --
      put atopia_FetchRoster() into wikiDomains
      get roster_ConstructPageArray (wikiDomains)
      fedwiki_ReturnPageArray it
   end index
   
   on sites
      transport_SetFormTitleDomain wikiDomain, pageTitle
      federation_ReturnSitesPageArray wikiDomain, pageTitle
   end sites
   
   on atopiaSites
      transport_SetFormTitleDomain wikiDomain, pageTitle
      atopia_ReturnSitesPageArray wikiDomain, pageTitle
   end atopiaSites
   
   on transportSites
      /*
      put "https://rest.livecode.world/festival" into tURL
      put "Festival Jam Sites" into pageTitle
      put "festivaljam.org" into wikiDomain
      */
      --
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["transport"] into tURL
      put postArray ["pageTitle"] into pageTitle
      put postArray ["wikiDomain"] into wikiDomain
      if wikiDomain is empty then
         set the itemdelimiter to slash
         put item 3 of $HTTP_REFERER into wikiDomain
      end if
      --
      put url tURL into pageJSON
      put json_ToArray (pageJSON) into pageArray
      put pageArray_GetFirstRoster (pageArray) into rosterDomains
      roster_StripHeader rosterDomains
      --
      put roster_ConstructSitesPageArray (wikiDomain, rosterDomains, pageTitle) into pageArray
      --
      fedwiki_ReturnPageArray pageArray
   end transportSites
   
   on subdomain
      transport_SetFormSlugDomain wikiDomain, pageSlug
      put the result into postArray
      put postArray ["sincePeriod"] into sincePeriod
      put postArray ["authorName"] into authorName
      /*
      put "author.fedwiki.org" into wikiDomain
      put "David Bovill" into authorName
      put "david-bovill-sites" into pageSlug
      */
      
      put pageArray_Fetch (wikiDomain, pageSlug) into pageArray
      put author_ListFedrayDomains (authorName, sincePeriod) into wikiDomains
      --
      put "List of sites" into sectionTitle
      put fedwiki_MarkdownIndex (wikiDomains) into markdownIndex
      --
      pageArray_EditSectionTitleText pageArray, sectionTitle, markdownIndex
      put authorName & CR&CR & wikiDomains into rosterText
      pageArray_SetFirstItem pageArray, "roster", rosterText
      --
      fedwiki_ReturnPageArray pageArray
   end subdomain
   
   on federation
      put transport_GetFormDomain() into wikiDomain
      -- put "voz.money" into wikiDomain
      --
      put fedray_FetchDomains (wikiDomain) into rosterDomains
      put roster_ConstructSitesPageArray (wikiDomain, rosterDomains, pageTitle) into pageArray
      --
      fedwiki_ReturnPageArray pageArray
   end federation
   
   on author
      put rigFetchSegment(3, "") into authorName
      replace "-" with space in authorName
      -- put "david bovill" into authorName
      --
      put author_FetchRosterSites (authorName, "(sites)") into wikiDomains
      -- put author_FetchModelDomains(authorName) into wikiDomains
      
      put roster_ConstructPageArray (wikiDomains) into pageArray
      put pageArray_Construct ("Test", authorName) into pageArray
      --
      fedwiki_ReturnPageArray pageArray
   end author
   
   on tsv
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["wikiDomain"] into wikiDomain
      put postArray ["minPageNum"] into minPageNum
      put postArray ["cseID"] into cseID
      --
      -- put atopia_ListWelcomeFolders (wikiDomain) into atopiaDomains
      put federation_ListDomains (wikiDomain) into wikiDomains
      --
      put cse_ConstructTSV (wikiDomains, cseID) into federationTSV
      --
      put pageArray_Construct ("Federation TSV", federationTSV) into pageArray
      fedwiki_ReturnPageArray pageArray
   end tsv
   
   on cat
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      
      put pageArray_Fetch (templateDomain, templateSlug) into pageArray
      put roster_PagefoldConstruct (pageArray) into rosterText
      --
      put "An automatically created roster. Created by [[Roster Maker]]." into pageDescription
      put fedwiki_CreateMarkdownPageArray ("Categorised Roster", pageDescription) into pageArray
      pageArray_AddRoster pageArray, rosterText
      --
      fedwiki_ReturnPageArray pageArray   
   end cat
   
   on refs
      put fedwiki_GetDroppedArray() into postArray
      --
      put postArray ["domainFilter"] into domainFilter
      put postArray ["pageSlug"] into templateSlug
      put postArray ["wikiDomain"] into templateDomain
      --
      put atopia_FetchRoster (domainFilter) into rosterDomains
      put roster_TidyPageFoldMaker (templateDomain, templateSlug, rosterDomains) into fromPageArray
      --
      fedwiki_ReturnPageArray fromPageArray   
   end refs
   
   on list
      put transport_GetFormDomain() into wikiDomain
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["pageSlug"] into pageSlug
      --
      put postArray ["itemID"] into itemID
      put postArray ["outputType"] into outputType
      --
      switch outputType
         case "top"
            put atopia_FetchRoster (domainFilter) into filteredAtopiaDomains
            put url_ListTopDomains (filteredAtopiaDomains) into wikiDomains
            break
            -- case "refs"
         default
            put atopia_FetchRoster (domainFilter) into wikiDomains
      end switch
      --
      url_SortDomainIndex wikiDomains
      put fedwiki_MarkdownIndex (wikiDomains) into markdownIndex
      put pageArray_Fetch (templateDomain, templateSlug) into pageArray
      pageArray_SetItemText pageArray, itemID, markdownIndex
      pageArray_StripJournal pageArray
      pageArray_AddFork pageArray, "sites.fedwiki.org"
      --
      fedwiki_ReturnPageArray pageArray   
   end list
   
   on update 
      -- update a roster
      _SetPostVars itemID, domainFilter, templateSlug, templateDomain, minPageNum, outputType
      --
      put roster_FetchUpdatedPageArray (domainFilter, templateDomain, templateSlug, pItemID) into pageArray
      fedwiki_ReturnPageArray pageArray   
   end update
   
   on domain
      put rigFetchSegment(3, "") into topDomain
      --
      put atopia_FetchRoster (topDomain) into rosterText
      put roster_ConstructPageArray (rosterText) into pageArray
      fedwiki_ReturnPageArray pageArray
   end domain
   
   on activity
      -- used by form for creating a roster-page
      put fedwiki_GetDroppedArray() into postArray
      put postArray ["wikiDomain"] into wikiDomain
      put roster_CreateActivityPage (wikiDomain) into pageArray
      fedwiki_ReturnPageArray pageArray
   end activity
   
   private command _SetPostVars @itemID, @domainFilter, @pageSlug, @wikiDomain, @minPageNum, @outputType
      put fedwiki_GetDroppedArray() into postArray
      --
      put postArray ["itemID"] into itemID
      put postArray ["domainFilter"] into domainFilter
      put postArray ["pageSlug"] into pageSlug
      put postArray ["wikiDomain"] into wikiDomain
      put postArray ["minPageNum"] into minPageNum
      put postArray ["outputType"] into outputType
   end _SetPostVars

?>