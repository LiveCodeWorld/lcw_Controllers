<?lc
   /* =  DESCRIPTION  =
   --
   The flickr.lc controller can be found at: flickr.lc
   Here is some test help
   Below we declare the global variables gControllerHandlers AND gData
   And put the public method names that we wish to expose into gControllerHandlers
   --
   */
   
   global gControllerHandlers, gData
   
   put "index,flickr,flickr" into gControllerHandlers

   
   /* ==  INITIALISATION  ==
   --
   Put all the handlers and variables that you wish to merge into your views
   into the global array "gData".

   Write any initialisation statements (loading any neeeded libraries for instance)
   into the initialisation handler "flickr.lc" below.
   --
   */

   command flickr
      start using stack (gAPPPATH & "stacks/lib_Flickr.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_FlickrAuth.livecodescript")
      start using stack (gAPPPATH & "stacks/lib_Fedwiki.livecode")
      start using stack (gAPPPATH & "stacks/lib_Pinterest.livecodescript")
      start using stack (gAPPPATH & "stacks/model_Library.livecodescript")
   end flickr
   

   /* ==  CODE  ==
   --
   Here we put the public handlers the controller uses and exposes as urls.
   --
   */
   
   on index
      /*
      The model is creating dependencies for model_Library and lib_LCW which are not needed on the server?
      pinterest is mixed in here an should be seperated out
      */
      put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      
      set the itemdelimiter to slash
      get item 1 to 4 of droppedURL
      switch
         case it = "https://www.pinterest.com/pin"
         case it = "https://www.pinterest.co.uk/pin"
            -- https://www.pinterest.com/pin/134545107601633296/
            put item 5 of droppedURL into photoID
            put pinterest_FetchPinPageJson (photoID) into pageJSON
            break
         case it = "https://www.flickr.com/photos"
            -- https://www.flickr.com/photos/152869685@N06/35893520742/in/pool-3569415@N23
            -- https://www.flickr.com/photos/152869685@N06/35253400043/in/album-72157683812549094/
            
            flickr_FetchAndDeconstructFromDroppedUrl droppedURL, photoTitle, photoDescription, mediumURL, photoTags
            put the result into photoArray
            put photoArray ["location"] into locationArray
            put flickr_ConstructPhotoMapPageArray (photoTitle, photoDescription, mediumURL, droppedURL, locationArray, photoTags) into pageJSON
            break
         case item 1 to 3 of droppedURL = "https://twitter.com" and item 5 of droppedURL = "status"
            -- https://twitter.com/Interior/status/507185938620219395/photo/1
            put twitter_FetchPageJson (droppedURL) into pageJSON
            break
         default
            set the itemdelimiter to "."
            if item -1 of droppedURL is among the items of "jpg.jpeg.png.gif" then
               local pageArray
               _AddImageToPageArray pageArray, droppedURL
               put json_FromArray (pageArray) into pageJSON
            else
               put fedwiki_ConstructErrorJSON ("URL not recognised") into pageJSON
            end if
      end switch
      
      fedwiki_ReturnJSON pageJSON
   end index
   
   command _AddImageToPageArray @pageArray, imageURL
      put "Dropped Image" into pageTitle
      put "This is a simple image dropped on to a wiki." into someText
      put fedwiki_ConstructNewPageArray (pageTitle, someText) into pageArray
   
      put "This is an image" into imageCaption
      put html_ExtractTLD (imageURL, true) into tldBit
      put "-" && tldBit into linkInfo
   
      put imageURL into descriptionURL
      put fedwiki_ConstructImageHtml (imageURL, imageCaption, descriptionURL, linkInfo) into imageHTML
      fedwiki_AddHtmlToPageArray pageArray, imageHTML
   end _AddImageToPageArray
   
   function html_ExtractTLD someURL, pLastTwo
      set the itemdelimiter to slash
      put item 3 of someURL into someTLD
      if pLastTwo is not true then return someTLD
   
      set the itemdelimiter to "."
      put item -2 to -1 of someTLD into tldBit
      return tldBit
   end html_ExtractTLD
   
   on flickr droppedURL
      if droppedURL is empty then
         put fedwiki_GetDroppedUrl ($_POST_RAW) into droppedURL
      end if
      
      if matchText (droppedURL, "https://www.flickr.com/photos/(.+)/(.+)/in/.+", userID, photoID) then
         flickr_FetchAndDeconstructFromDroppedUrl droppedURL, photoTitle, photoDescription, mediumURL, photoTags
         put the result into photoArray
         put photoArray ["location"] into locationArray
         put flickr_ConstructPhotoMapPageArray (photoTitle, photoDescription, mediumURL, droppedURL, locationArray, photoTags) into pageJSON
         fedwiki_ReturnJSON pageJSON
      else
         fedwiki_ExitAndReturnError "Dropped url is nor recognised.", "Error"
      end if
   end flickr

?>